[build-system]
requires = ["hatchling"]
build-backend="hatchling.build"

[project]
name = "dau-build"
authors = [{name = "the dau authors", email = "dev@dau.dev"}]
description = "Build tools for dau"
readme = "README.md"
license = { text = "Apache-2.0" }
version = "0.1.0"
requires-python = ">=3.9"
keywords = []

classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
    "amaranth",
    "hydra-core",
    "pydantic",
    "pyslang",
    "toml",
    "typing_extensions",
]

[project.optional-dependencies]
develop = [
    "amaranth-boards@git+https://github.com/amaranth-lang/amaranth-boards.git",
    "build",
    "bump-my-version",
    "check-manifest",
    "cocotb@git+https://github.com/cocotb/cocotb.git",
    "hatchling",
    "pytest",
    "pytest-cov",
    "ruff",
    "twine",
    "uv",
    "wheel",
    "verilator",
]

[project.scripts]

[project.urls]
Repository = "https://github.com/dau-dev/dau-build"
Homepage = "https://github.com/dau-dev/dau-build"

[tool.bumpversion]
current_version = "0.1.0"
commit = true
tag = true

[[tool.bumpversion.files]]
filename = "dau_build/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[tool.check-manifest]
ignore = [
    ".copier-answers.yml",
    "Makefile",
    "docs/**/*",
]

[tool.coverage.run]
omit = [
    "dau_build/tests/integration/",
]
[tool.coverage.report]
exclude_also = [
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
fail_under = 50

[tool.hatch.metadata]
# TODO remove when cocotb is released
allow-direct-references = true

[tool.hatch.build]
artifacts = []

[tool.hatch.build.sources]
src = "/"

[tool.hatch.build.targets.sdist]
packages = ["dau_build", "hydra_plugins"]

[tool.hatch.build.targets.wheel]
packages = ["dau_build", "hydra_plugins"]

[tool.hatch.build.targets.wheel.shared-data]

[tool.pytest.ini_options]
addopts = ["-vvv", "--junitxml=junit.xml"]
asyncio_mode = "strict"
testpaths = "dau_build/tests"

[tool.ruff]
line-length = 150

[tool.ruff.lint]
extend-select = ["I"]

[tool.ruff.lint.isort]
combine-as-imports = true
default-section = "third-party"
known-first-party = ["dau_build"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]

[tool.setuptools]
ext-modules = [
  {name = "mylib.foo", sources = ["foo.c"]}
]
