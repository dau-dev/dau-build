[build-system]
requires = ["setuptools", "wheel"]

[project]
name = "dau-build"
description = "Build tools for dau projects"
version = "0.1.0"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8"
authors = [
    { name = "Tim Paine", email = "t.paine154@gmail.com" },
]
keywords = [
    "soc",
    "hardware",
    "fpga",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: Apache Software License",
]

dependencies = [
]

[project.optional-dependencies]
develop = [
    "bump-my-version",
    "check-manifest",
    "ruff>=0.5,<0.6",
    # test
    "pytest",
    "pytest-cov",
]
test = [
    "pytest",
    "pytest-cov",
]

[project.urls]
repository = "https://github.com/dau-dev/dau-build"
homepage = "https://github.com/dau-dev/dau-build"

[tool.bumpversion]
current_version = "0.1.0"
commit = true
tag = false

[[tool.bumpversion.files]]
filename = "dau_build/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[tool.coverage.run]
branch = true
omit = [
    "dau_build/tests/integration/",
]
[tool.coverage.report]
exclude_also = [
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
fail_under = 50

[tool.pytest.ini_options]
addopts = ["-vvv", "--junitxml=junit.xml"]
asyncio_mode = "strict"
testpaths = "dau_build/tests"

[tool.ruff]
line-length = 150

[tool.ruff.lint]
extend-select = ["I"]

[tool.ruff.lint.isort]
combine-as-imports = true
default-section = "third-party"
known-first-party = ["dau_build"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
